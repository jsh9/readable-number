[tox]
envlist =
    cercis
    flake8-basic
    flake8-misc
    flake8-docstrings
    flake8-darglint
    py36
    py37
    py38
    py39
    py310
    py311


[testenv]
deps = pytest
commands =
    pytest --tb=long .


[testenv:cercis]
skip_install = true
deps = cercis>=0.1.2
commands =
    cercis --single-quote=True --check --diff readable_number/ tests/

[testenv:flake8-basic]
skip_install = true
deps = flake8>=5.0
commands =
    flake8 .


[testenv:flake8-misc]
skip_install = true
basepython =
    # Because some flake8 plugins only supports Python 3.8 or above
    python3.8
deps =
    # Pinning to older flake8 because flake8-commas
    # is not compatible with newer flake8 versions.
    flake8==5.0.4
    flake8-bugbear
    flake8-comprehensions
    flake8-commas
    flake8-eradicate
    flake8-broken-line
    flake8-quotes
    flake8-debugger
    flake8-length
    flake8-clean-block
    flake8-indent-in-def
    flake8-picky-parentheses
    flake8-implicit-str-concat
    flake8-return
    flake8-broken-line
commands =
    flake8 --select B,C,D,E800,N4,Q,T,LN,CLB,IND,PAR,ISC,R,N400 .


[testenv:flake8-docstrings]
skip_install = true
deps =
    flake8-docstrings
commands =
    flake8 --ignore D100,D104,D105,D107,D400,D205  ./readable_number


[testenv:flake8-darglint]
skip_install = true
deps =
    flake8
    darglint
commands =
    flake8 --select DAR --ignore DAR000 ./readable_number


[darglint]
ignore_regex = ^_(.*)
docstring_style = numpy
strictness = long


[flake8]
max-line-length = 88
extend-ignore =
    # C901: complexity
    C901,
    # E203: whitespace before ":"
    E203,
    # W503: line break before binary operator
    W503,
    # E501: line length
    E501,
    # LN002: doc/comment line too long
    LN002,
    # R504: unnecessary variable assignment before return statement
    R504,
count = true
statistics = true
max-complexity = 10
per-file-ignores =
    readable_number/__init__.py:F401
